public class Solution {
    /**
     * @param triangle: a list of lists of integers.
     * @return: An integer, minimum path sum.
     */
    public int minimumTotal(int[][] triangle) {
        // write your code here
        if(triangle == null || triangle.length == 0)
            return -1;
        if(triangle[0] == null || triangle[0].length == 0)
            return -1;
        int n = triangle.length;
        int res[][] = new int[n][n];
        res[0][0] = triangle[0][0];
        for(int i = 1;i < n;i++)
        {
            res[i][0] = res[i - 1][0] + triangle[i][0];
            res[i][i] = res[i - 1][i - 1] + triangle[i][i];
        }
        for(int i = 2;i < n;i++)
        {
            for(int j = 1;j < i;j++)
            {
                res[i][j]= Math.min(res[i - 1][j - 1],res[i - 1][j]) + triangle[i][j];
            }
        }
        int min = res[n - 1][0];
        for(int i = 1;i < n;i++)
        {
            if(res[n - 1][i] < min)
            {
                min = res[n - 1][i];
            }
        }
        return min;
    }
}
