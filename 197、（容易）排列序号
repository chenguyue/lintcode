public class Solution {
    /**
     * @param A an integer array
     * @return a long integer
     */
    public long permutationIndex(int[] A) {
        // Write your code here
        long num = 1;
        long flag = 0;
        int[] B = new int[A.length];
        for(int i = 0;i < A.length;i++)
        {
            B[i] = A[i];
        }
        quick_sort(A,0,A.length-1);
        /*
        for(int i = 0;i < A.length;i++)
        {
            System.out.print(B[i]+"...");
        }
        System.out.println();
        for(int i = 0;i < A.length;i++)
        {
            System.out.print(A[i]+"...");
        }
        System.out.println();
        */
        for(int i = 0;i < B.length;i++)
        {
            for(int j = 0;j < A.length;j++)
            {
                if(B[i] == A[j] && flag == 0)
                {
                    //System.out.println(i+"..."+j);
                    num += power(A.length-i-1)*j;
                    A = delet(A,A[j]);
                    flag = 1;
                }
            }
            flag = 0;
            
        }
        return num;
    }
    
    
    public static void quick_sort(int[] a, int low, int high)
    {
        if(low < high)
        {
            int l = low;
            int h = high;
            int x = a[l];
            while(l < h)
            {
                while(l < h && a[h] >= x)
                {
                    h--;
                }
                if(l < h )
                {
                    a[l++] = a[h];
                }
                while(l < h && a[l] < x)
                {
                    l++;
                }
                if(l < h)
                {
                    a[h--] = a[l];
                }
            }
        a[l] = x;
        quick_sort(a,low,l-1);
        quick_sort(a,l+1,high);
        }
    }
    
    public static int[] delet(int[] a,int x)
    {
        for(int i = 0;i < a.length;i++)
        {
            if(a[i] == x)
                {
                    for(int j = i;j < a.length-1;j++)
                    {
                        a[j] = a[j + 1];
                    }
                    a[a.length-1] = x;
                    break;
                }
                
        }
        return a;
    }
    
    public static long power(int x)
    {
        long temp = 1;
        while(x > 1)
            temp = temp * x--;
        return temp;
    }
}
