public class Solution {
    /**
     * @param grid a boolean 2D matrix
     * @return an integer
     */
    public int numIslands(boolean[][] grid) {
        // Write your code here
        if(grid == null || grid.length == 0 || grid[0].length == 0)
            return 0;
        int count = 0;
        int n = grid.length;
        int m = grid[0].length;
        for(int i = 0;i < n;i++)
        {
            for(int j = 0;j < m;j++)
            {
                if(grid[i][j] == true)
                {
                    count++;
                    change(grid,i,j);
                }
            }
        }
        return count;
    }
    
    public static boolean[][] change(boolean[][] grid,int i,int j)
    {
        grid[i][j] = false;
        if(i-1 >= 0 && grid[i-1][j] == true)
            grid = change(grid,i-1,j);
        if(i+1 < grid.length && grid[i+1][j] == true)
            grid = change(grid,i+1,j);
        if(j-1 >= 0 && grid[i][j-1] == true)
            grid = change(grid,i,j-1);
        if(j+1 < grid[0].length && grid[i][j+1] == true)
            grid = change(grid,i,j+1);
        return grid;
    }
    
}
