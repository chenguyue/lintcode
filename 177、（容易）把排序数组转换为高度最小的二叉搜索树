/**
 * Definition of TreeNode:
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left, right;
 *     public TreeNode(int val) {
 *         this.val = val;
 *         this.left = this.right = null;
 *     }
 * }
 */ 
public class Solution {
    /**
     * @param A: an integer array
     * @return: a tree node
     */
    public TreeNode sortedArrayToBST(int[] A) {  
        // write your code here
        if(A == null || A.length < 1)
            return null;
        if(A.length == 1)
            return new TreeNode(A[0]);
        TreeNode root = new TreeNode(A[A.length/2]);
        int AL[] = new int[A.length/2];
        int AR[] = new int[A.length-A.length/2 - 1];
        for(int i = 0;i < A.length/2;i++)
        {
            AL[i] = A[i];
        }
        for(int j = 0;j < A.length - A.length/2 - 1;j++)
        {
            AR[j] = A[A.length/2 + j + 1];
        }
        root.left = sortedArrayToBST(AL);
        root.right = sortedArrayToBST(AR);
        return root;
    }  
}
