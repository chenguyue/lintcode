public class Solution {
    /**
     * @param heights: an array of integers
     * @return: a integer
     */
    public int trapRainWater(int[] heights) {
        // write your code here
        if(heights.length < 3) return 0;
        int sum = 0;
        int thisSum = 0;
        for(int i = 1;i < heights.length-1;i++)
        {
            int l = leftMax(heights,i);
            int r = rightMax(heights,i);
            if(min(l,r) > heights[i]) 
            {
                thisSum = min(l,r) -heights[i];
            }
            else thisSum = 0;
            sum = sum +thisSum;
        }
        return sum;
    }
    public int leftMax(int A[],int k)
    {
        int leftmax = 0;
        int t1 = 0;
        for(int i = 0;i < k;i++)
        {
            if(A[i] > leftmax)  leftmax = A[i];
        }
        return leftmax;
    }
    public int rightMax(int A[],int k)
    {
        int rightmax = 0;
        for(int i = k+1;i < A.length;i++)
        {
            if(A[i] > rightmax)  rightmax = A[i];
        }
        return rightmax;
    }
    public int min(int a,int b)
    {
        if(a > b) return b;
        else      return a;
    }
}
